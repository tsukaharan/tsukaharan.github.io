<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>masalog</title>
    <link>https://tsukaharan.github.io/</link>
    <description>Recent content on masalog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <managingEditor>tsukaharama@gmail.com (masaru tsukahara)</managingEditor>
    <webMaster>tsukaharama@gmail.com (masaru tsukahara)</webMaster>
    <lastBuildDate>Tue, 18 Oct 2016 20:55:05 +0900</lastBuildDate>
    <atom:link href="https://tsukaharan.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>HerokuではなくIBMのBluemixでHubotを動かしてみる</title>
      <link>https://tsukaharan.github.io/post/004/</link>
      <pubDate>Tue, 18 Oct 2016 20:55:05 +0900</pubDate>
      <author>tsukaharama@gmail.com (masaru tsukahara)</author>
      <guid>https://tsukaharan.github.io/post/004/</guid>
      <description>

&lt;p&gt;会社のSlackにHubotを導入しようと思い、はじめはスタンダードでHeroku使おうと思ったんですが、この&lt;a href=&#34;http://qiita.com/akameco/items/39a55635ceb0ba185b7f&#34;&gt;エントリ&lt;/a&gt;を見て、IBMの&lt;a href=&#34;https://www.ibm.com/cloud-computing/jp/ja/bluemix/&#34;&gt;Bluemix&lt;/a&gt;で導入を試みることにしました。&lt;/p&gt;

&lt;p&gt;herokuの欠点として、&lt;br /&gt;
- 30分アクセスしなければスリープ&lt;br /&gt;
- 24時間連続で動かすことができない(6時間のスリープ)&lt;br /&gt;
があるらしいです。&lt;/p&gt;

&lt;h3 id=&#34;bluemixのアカウント登録&#34;&gt;Bluemixのアカウント登録&lt;/h3&gt;

&lt;p&gt;当方アカウントを持っていなかったので登録からです。
&lt;a href=&#34;http://qiita.com/KenichiSekine/items/6ad49b25167b3f4cdb63&#34;&gt;こちら&lt;/a&gt;のページの説明がとても丁寧で分かりやすいですが、&lt;br /&gt;
まぁ何も見ないでやっても普通に登録できます。&lt;/p&gt;

&lt;p&gt;Heroku同様に&lt;a href=&#34;http://qiita.com/zuhito/items/86e7ad47d14937d3e9b6#_reference-a3c8d97a4441b514a91d&#34;&gt;無料枠&lt;/a&gt;も用意されています。&lt;/p&gt;

&lt;p&gt;気をつけるべきは、サーバによってオーガニゼーションとスペース(インスタンス以上サーバ未満って感じ？)をそれぞれ登録する必要があることくらいです。&lt;/p&gt;

&lt;h3 id=&#34;ホスト作成&#34;&gt;ホスト作成&lt;/h3&gt;

&lt;p&gt;アカウントを登録できたら、ホストの登録を行います。
全部GUIで出来るので簡単です。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Cloud Foundry アプリケーションの作成&lt;/code&gt; を選び、アプリ名、ホスト名、ドメインを入力します。ドメインは、右上のメニューに有る、オーガニゼーションとスペースを作ったサーバになっていることを確認しましょう。&lt;/p&gt;

&lt;p&gt;{{ figure src=&amp;ldquo;/img/004_01.jpeg&amp;rdquo; }}&lt;/p&gt;

&lt;p&gt;2016年10月時点では、シドニー、英国、米国南部を選べるようです。&lt;/p&gt;

&lt;h3 id=&#34;ローカルでhubotのインストール&#34;&gt;ローカルでHubotのインストール&lt;/h3&gt;

&lt;p&gt;サーバの準備ができたら次はローカルでHubotのインストールを行います。&lt;/p&gt;

&lt;p&gt;nodeが入っていない方はまずこちらを&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install node
$ npm install -g yo grunt-cli bower
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次にhubotジェネレーターを入れます&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ npm install -g generator-hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hubotをインストールする適当なディレクトリに移動して、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$mkdir hubot
$cd hubot
$yo hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;を実行します。名前などいくつか質問されますので答えていきます。&lt;br /&gt;
&lt;code&gt;Bot adapter&lt;/code&gt;という質問をされたら、&lt;code&gt;Slack&lt;/code&gt;と答えてください。&lt;/p&gt;

&lt;p&gt;Botが動いているか確認します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bin/hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エンターを押すとコマンド入力できるようになるので、とりあえずpingを叩いて動いているか確認しましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hubot&amp;gt; hubot ping
Hubot&amp;gt; PONG
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ぴんぽん！&lt;/p&gt;

&lt;h3 id=&#34;サンプルスクリプトの作成&#34;&gt;サンプルスクリプトの作成&lt;/h3&gt;

&lt;p&gt;Hubotのスクリプトは、 &lt;code&gt;ルートディレクトリ/scripit/&lt;/code&gt; 配下に入れます。&lt;br /&gt;
デフォルトだと、 &lt;code&gt;example.coffee&lt;/code&gt; が入っているので、その中にサンプルスクリプトを書いてみます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;module.exports = (robot) -&amp;gt;
  robot.hear /(ランチ|お昼ごはん|お腹すいた|)/i, (msg) -&amp;gt;
    msg.send &amp;quot;行きましょう！社長のオゴリで！！&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;もう一度hubotを起動してみましょう。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Hubot&amp;gt; ランチ
Hubot&amp;gt; 行きましょう！社長のオゴリで！！
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;行きましょう！&lt;/p&gt;

&lt;h3 id=&#34;bluemixにpush&#34;&gt;Bluemixにpush&lt;/h3&gt;

&lt;p&gt;さて、ローカルで動くことが確認できたので、次はBluemixにpushしていきます。
まずは、 &lt;code&gt;manifest.yml&lt;/code&gt; を作成し編集します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ vi manifesst.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-manifest.yml&#34;&gt;applications:
- buildpack: https://github.com/jthomas/nodejs-v4-buildpack.git
  command: ./bin/hubot --adapter slack
  path: .
  instances: 1
  memory: 256M
  host: hubot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ホスト名を指定しないとエラーになることがあるので、Bluemixの設定時に作ったホスト名を指定してあげましょう。&lt;/p&gt;

&lt;p&gt;コンソールからbluemixにログインします。herokuと同じような使い勝手になっています。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; cf login -a https://api.au-syd.bluemix.net -u username -p password
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;※ -aオプションはログインするサーバの指定ですが、シドニーの場合のURLを入れています。米国南部・英国は異なりますので、ご注意ください。&lt;/p&gt;

&lt;p&gt;hubotをサーバにpushします。また、その際にSlackのトークンも割り当てておきましょう。Slackのトークンの取得はSlackにログインした状態で&lt;a href=&#34;http://my.slack.com/services/new/hubot&#34;&gt;こちら&lt;/a&gt;にアクセスしてみてください。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cf push hubot
cf set-env hubot HUBOT_SLACK_TOKEN slackのトークン
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;実行されました的な表示が出ればOKです。これでSlackでhubotが動くようになりました。&lt;/p&gt;

&lt;h3 id=&#34;slackでのテスト&#34;&gt;Slackでのテスト&lt;/h3&gt;

&lt;p&gt;hubotを招待した任意のチャンネルで、&lt;code&gt;ランチ&lt;/code&gt;とコメントして&lt;code&gt;行きましょう！社長のオゴリで！！&lt;/code&gt;と返ってくれば成功です。&lt;/p&gt;

&lt;p&gt;がんがんスクリプトを作ってhubotを成長させていきましょう。&lt;/p&gt;

&lt;p&gt;本日もお読み頂きましてありがとうございました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugoで画像リンクを記事に挿入する</title>
      <link>https://tsukaharan.github.io/post/003/</link>
      <pubDate>Mon, 17 Oct 2016 16:41:26 +0900</pubDate>
      <author>tsukaharama@gmail.com (masaru tsukahara)</author>
      <guid>https://tsukaharan.github.io/post/003/</guid>
      <description>&lt;p&gt;せっかくマークダウンで記載しているのにhtml文章を入れないといけないのもナンセンスだなと思い、MDで書く方法を探してみました。&lt;/p&gt;

&lt;p&gt;しかし何なんですかね。こういうのを気持ち悪いと思う感覚。例えば全角数字とか半角カナとか、混在していたら気持ち悪いって感じるエンジニアさん、多いと思うんですよ。&lt;/p&gt;

&lt;p&gt;さて、hugoにおける画像挿入ですが、実は公式に用意されている記法があります。&lt;br /&gt;
それが&lt;a href=&#34;https://gohugo.io/extras/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;です。&lt;/p&gt;

&lt;p&gt;記事内のfigureの箇所にも書いてありますが、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby:qiita.rb&#34;&gt;{ {&amp;lt; figure src=&amp;quot;/img/hoge.jpg&amp;quot; &amp;gt;}}  
puts &#39;The best way to log and share programmers knowledge.&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;My code&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と定義すると、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;quot;/img/hoge.png&amp;quot;&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とコンパイルしてくれます。
簡単ですね！&lt;/p&gt;

&lt;p&gt;ちなみにオプションも用意されており、&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;src
link
title
caption
class
attr (attribution)
attrlink
alt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;が用意されています。その場合、&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;https://tsukaharan.github.io/img/hoge.jpg&#34; alt=&#34;image&#34; /&gt;
    
    
&lt;/figure&gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と記述すると&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;figure&amp;gt;
    &amp;lt;img src=&amp;quot;/img/hoge.png&amp;quot; alt=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;/figure&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とコンパイルしてくれます！簡単ですね！！&lt;/p&gt;

&lt;p&gt;hugo便利で軽くて簡単で本当に捗ります。&lt;/p&gt;

&lt;p&gt;本日もお読み頂きましてありがとうございました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>hugoのテーマカスタマイズあれこれ</title>
      <link>https://tsukaharan.github.io/post/002/</link>
      <pubDate>Mon, 17 Oct 2016 14:40:53 +0900</pubDate>
      <author>tsukaharama@gmail.com (masaru tsukahara)</author>
      <guid>https://tsukaharan.github.io/post/002/</guid>
      <description>

&lt;p&gt;hugoってまだまだ日本語ドキュメント多くないですよね。
インストールしました的なエントリは多いのですが、その中身のカスタマイズ的なところの言及は多くない気がします。大抵英語のリファレンス参考にしてます。&lt;/p&gt;

&lt;p&gt;自分が使っているテンプレートテーマは&lt;a href=&#34;https://github.com/halogenica/beautifulhugo&#34;&gt;githubに落っこちている&lt;/a&gt;ので、その中身見れば30分くらいでどこで何やっているのかあらかた想像ついたんですけど、例えばwordpressからのブログ以降を考えている方とかで、あんまりコードの中身読みませんよって人は少し苦労するかもと思いました。&lt;/p&gt;

&lt;p&gt;ということで、いくつかポイントになりそうな点をメモしておきます。&lt;/p&gt;

&lt;p&gt;ちなみにテーマ選びは&lt;a href=&#34;http://themes.gohugo.io/&#34;&gt;こちら&lt;/a&gt;から見るとDEMOが有るのでとっても分かりやすいと思います。&lt;/p&gt;

&lt;p&gt;自分が使わせて頂いているテーマは&lt;a href=&#34;http://themes.gohugo.io/beautifulhugo/&#34;&gt;beautifulhugo&lt;/a&gt;です&lt;/p&gt;

&lt;p&gt;※別のテーマの構成がどうなっているかはそれこそテーマによるので、あくまで参考レベルにしかならないかもしれません。&lt;/p&gt;

&lt;p&gt;　　&lt;/p&gt;

&lt;h3 id=&#34;テーマファイル&#34;&gt;テーマファイル&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;document_root/themes/theme_name/&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;基本レイアウト&#34;&gt;基本レイアウト&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;document_root/themes/theme_name/layouts/partials/&lt;/code&gt;&lt;br /&gt;
の中に&lt;br /&gt;
&lt;code&gt;disqus.html,  head.html,  nav.html,  post.html,  footer.html,  header.html,  page.html&lt;/code&gt;
があります。&lt;br /&gt;
これは大体名前見れば役割は分かりますね。&lt;/p&gt;

&lt;p&gt;弄る機会が多いとすれば、&lt;br /&gt;
&lt;code&gt;nav.html,  post.html,  page.html&lt;/code&gt;&lt;br /&gt;
あたりでしょうか。
たとえば私はソーシャルボタンを付けるのに、post.htmlの中を弄くりました。&lt;/p&gt;

&lt;p&gt;はてブボタンであれば、&lt;code&gt;post.html&lt;/code&gt;内に以下のように記載すれば、記事ごとにはてブボタンを取り付けてくれます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;{{ partial &amp;quot;header.html&amp;quot; . }}

&amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
    &amp;lt;div class=&amp;quot;col-lg-8 col-lg-offset-2 col-md-10 col-md-offset-1&amp;quot;&amp;gt;
      &amp;lt;article role=&amp;quot;main&amp;quot; class=&amp;quot;blog-post&amp;quot;&amp;gt;
          {{ .Content }}

&amp;lt;!-- ここからはてブボタン --&amp;gt;
&amp;lt;a href=&amp;quot;http://b.hatena.ne.jp/entry/&amp;quot; class=&amp;quot;hatena-bookmark-button&amp;quot; data-hatena-bookmark-layout=&amp;quot;simple-balloon&amp;quot; title=&amp;quot;このエントリーをはてなブックマークに追
加&amp;quot;&amp;gt;&amp;lt;img src=&amp;quot;https://b.st-hatena.com/images/entry-button/button-only@2x.png&amp;quot; alt=&amp;quot;このエントリーをはてなブックマークに追加&amp;quot; width=&amp;quot;20&amp;quot; height=&amp;quot;20&amp;quot; style=&amp;quot;border: none;&amp;quot; /&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://b.st-hatena.com/js/bookmark_button.js&amp;quot; charset=&amp;quot;utf-8&amp;quot; async=&amp;quot;async&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;!-- はてブボタンここまで --&amp;gt;

      &amp;lt;/article&amp;gt;
      &amp;lt;ul class=&amp;quot;pager blog-pager&amp;quot;&amp;gt;
        {{ if .PrevInSection }}
        &amp;lt;li class=&amp;quot;previous&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .PrevInSection.Permalink }}&amp;quot; data-toggle=&amp;quot;tooltip&amp;quot; data-placement=&amp;quot;top&amp;quot; title=&amp;quot;{{ .PrevInSection.Title }}&amp;quot;&amp;gt;&amp;amp;larr; Previous Post&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
        {{ if .NextInSection }}
        &amp;lt;li class=&amp;quot;next&amp;quot;&amp;gt;
          &amp;lt;a href=&amp;quot;{{ .NextInSection.Permalink }}&amp;quot; data-toggle=&amp;quot;tooltip&amp;quot; data-placement=&amp;quot;top&amp;quot; title=&amp;quot;{{ .NextInSection.Title }}&amp;quot;&amp;gt;Next Post &amp;amp;rarr;&amp;lt;/a&amp;gt;
        &amp;lt;/li&amp;gt;
        {{ end }}
      &amp;lt;/ul&amp;gt;

      {{ if .Site.DisqusShortname }}
      &amp;lt;div class=&amp;quot;disqus-comments&amp;quot;&amp;gt;
        {{ template &amp;quot;_internal/disqus.html&amp;quot; . }}
      &amp;lt;/div&amp;gt;
      {{ end }}
    &amp;lt;/div&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;次はFBボタンとか付けていきたいなと思います。&lt;/p&gt;

&lt;p&gt;本日もお読み頂きましてありがとうございました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ブログはじめました</title>
      <link>https://tsukaharan.github.io/post/001/</link>
      <pubDate>Fri, 07 Oct 2016 20:21:44 +0900</pubDate>
      <author>tsukaharama@gmail.com (masaru tsukahara)</author>
      <guid>https://tsukaharan.github.io/post/001/</guid>
      <description>&lt;p&gt;色々ログ置き場どうしようかなと思っており、以前ははてブに作っていたんですがあんまり愛着持てなかったりしたので、今回は&lt;a href=&#34;https://pages.github.com/&#34;&gt;githubページ&lt;/a&gt;に自分のサイトを置くことにしました。&lt;/p&gt;

&lt;p&gt;今回は&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;自分のブログが書ければ良いので静的サイトで充分&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;何かあったときに移行しやすいようマークダウンで書きたい&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;最小限のデザイン・機能で良いので静的テンプレートエンジンで良い&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;コンパイル軽い&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;あたりを目安に構成を考えました。&lt;/p&gt;

&lt;p&gt;結果、以下の構成としました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;サイト置き場 : username.github.io&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;バージョン管理楽だし&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テンプレートエンジン : hugo&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;go言語で書かれていて、とにかく軽くて評判が良かった&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;テーマ : &lt;a href=&#34;http://deanattali.com/beautiful-jekyll/&#34;&gt;beautiful-jekyll&lt;/a&gt;&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;シンプルなデザインとレイアウトがお気に入り。&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;homebrewが最新じゃなくていくつかハマりましたが、結果的には1時間程度でセットアップできました。とっても簡単だと思います。&lt;br /&gt;
脱wordpressしたい方におすすめの構成だと思います。非エンジニアの私でも出来ました。&lt;/p&gt;

&lt;p&gt;参考&lt;br /&gt;
&lt;a href=&#34;http://motomizuki.github.io/blog/2015/02/28/hugodeploy/&#34;&gt;Hugoのインストールから自動デプロイまで&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;http://qiita.com/eichann/items/4fe61b8b9bbafcfbe847&#34;&gt;Hugo + Github Pagesでブログを公開してみた&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title></title>
      <link>https://tsukaharan.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <author>tsukaharama@gmail.com (masaru tsukahara)</author>
      <guid>https://tsukaharan.github.io/page/about/</guid>
      <description>

&lt;h3 id=&#34;作者について&#34;&gt;作者について&lt;/h3&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;https://tsukaharan.github.io/img/author.png&#34; alt=&#34;author&#34; /&gt;
    
    
&lt;/figure&gt;


&lt;p&gt;BizDev中心に企業のお手伝いしながら、いろいろ事業開発がんばってます。&lt;br /&gt;
医療と教育がだいすきなので、0 → 1、1 → 10 フェーズの事業開発のリソースをお探しの方、お声がけください。&lt;/p&gt;

&lt;p&gt;趣味は釣りとドライブと&lt;del&gt;&lt;a href=&#34;https://tabelog.com/chiba/A1206/A120603/12000453/dtlrvwlst/55313880/&#34;&gt;クソまずいラーメン&lt;/a&gt;&lt;/del&gt;。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>